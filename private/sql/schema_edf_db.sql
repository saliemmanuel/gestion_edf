CREATE TABLE SOUS_TRAITANT(
   ID_SOUS_TRAITANT INT(20) NOT NULL AUTO_INCREMENT,
   CODE_SOUS_TRAITANT VARCHAR(50),
   NOM_SOUS_TRAITANT VARCHAR(50),
   ADRESSE_SOUS_TRAITANT VARCHAR(50),
   PRIMARY KEY(ID_SOUS_TRAITANT)
);

CREATE TABLE JOUR(
   ID_JOUR INT(20) NOT NULL AUTO_INCREMENT,
   JOUR VARCHAR(50),
   PRIMARY KEY(ID_JOUR)
);

CREATE TABLE ZEI(
   ID_ZEI INT(20) NOT NULL AUTO_INCREMENT,
   CODE_ZEI VARCHAR(50) NOT NULL,
   VILLE_ZEI VARCHAR(50),
   PRIMARY KEY(ID_ZEI)
);

CREATE TABLE MAITRE_OEUVRE(
   ID_MAITRE_OEUVRE INT(20) NOT NULL AUTO_INCREMENT,
   NOM_MAITRE_OEUVRE VARCHAR(50),
   ADRESSE_MAITRE_OEUVRE VARCHAR(50),
   TEL_MAITRE_OEUVRE VARCHAR(50),
   PRIMARY KEY(ID_MAITRE_OEUVRE)
);

CREATE TABLE ELECTRICIEN(
   ID_ELECTRICIEN INT(20) NOT NULL AUTO_INCREMENT,
   NOM_ELECTRICIEN VARCHAR(50),
   ADRESSE_ELECTRICIEN VARCHAR(50),
   TEL_ELECTRICIEN VARCHAR(50),
   PRIMARY KEY(ID_ELECTRICIEN)
);

CREATE TABLE TYPE_OPERATION(
   ID_TYPE_OPERATION INT(20) NOT NULL AUTO_INCREMENT,
   NOM_OPERATION VARCHAR(50),
   PRIMARY KEY(ID_TYPE_OPERATION)
);

CREATE TABLE CLIENT(
   ID_CLIENT INT(20) NOT NULL AUTO_INCREMENT,
   NOM_CLIENT VARCHAR(50),
   PRENOM_CLIENT VARCHAR(50),
   ADRESSE_CLIENT VARCHAR(50),
   TEL_CLIENT VARCHAR(50),
   PRIMARY KEY(ID_CLIENT)
);

CREATE TABLE CONTRAT(
   ID_CONTRAT INT(20) NOT NULL AUTO_INCREMENT,
   NUMERO_CONTRAT VARCHAR(50) NOT NULL,
   ID_SOUS_TRAITANT INT(20) NOT NULL,
   PRIMARY KEY(ID_CONTRAT),
   FOREIGN KEY(ID_SOUS_TRAITANT) REFERENCES SOUS_TRAITANT(ID_SOUS_TRAITANT)
);

CREATE TABLE LOTISSEMENT(
   ID_LOTISSEMENT INT(20) NOT NULL AUTO_INCREMENT,
   NOM_LOTISSEMENT VARCHAR(50),
   RUE_LOTISSEMENT VARCHAR(50),
   COMMUNE_LOTISSEMENT VARCHAR(50),
   ID_ELECTRICIEN INT(20) NOT NULL,
   ID_MAITRE_OEUVRE INT(20) NOT NULL,
   PRIMARY KEY(ID_LOTISSEMENT),
   FOREIGN KEY(ID_ELECTRICIEN) REFERENCES ELECTRICIEN(ID_ELECTRICIEN),
   FOREIGN KEY(ID_MAITRE_OEUVRE) REFERENCES MAITRE_OEUVRE(ID_MAITRE_OEUVRE)
);

CREATE TABLE DEMANDE(
   ID_DEMANDE INT(20) NOT NULL AUTO_INCREMENT,
   REFERENCE_DEMANDE VARCHAR(50),
   DATE_DEMANDE DATE,
   NOM_CLIENT_DEMANDE VARCHAR(50),
   PRENOM_CLIENT_DEMANDE VARCHAR(50),
   ADRESSE_CLIENT_DEMANDE VARCHAR(50),
   TEL_CLIENT_DEMANDE VARCHAR(50),
   RUE_TRAVAUX_DEMANDE VARCHAR(50),
   NOM_LOTISSEMENT_DEMANDE VARCHAR(50),
   COMMUNE_TRAVAUX_DEMANDE VARCHAR(50),
   ID_CLIENT INT(20) NOT NULL,
   ID_LOTISSEMENT INT(20) NOT NULL,
   ID_ZEI INT(20) NOT NULL,
   PRIMARY KEY(ID_DEMANDE),
   FOREIGN KEY(ID_CLIENT) REFERENCES CLIENT(ID_CLIENT),
   FOREIGN KEY(ID_LOTISSEMENT) REFERENCES LOTISSEMENT(ID_LOTISSEMENT),
   FOREIGN KEY(ID_ZEI) REFERENCES ZEI(ID_ZEI)
);

CREATE TABLE OPERATION(
   ID_OPERATION INT(20) NOT NULL AUTO_INCREMENT,
   CODE_OPERATION VARCHAR(50),
   LIBELLE_OPERATION VARCHAR(50),
   POIDS_OPERATION VARCHAR(50),
   ID_DEMANDE INT(20) NOT NULL,
   PRIMARY KEY(ID_OPERATION),
   FOREIGN KEY(ID_DEMANDE) REFERENCES DEMANDE(ID_DEMANDE)
);

CREATE TABLE DEVIS(
   ID_DEVIS INT(20) NOT NULL AUTO_INCREMENT,
   NUMERO_DEVIS VARCHAR(50),
   DATE_DEVIS DATE,
   MONTANT_ESTIME_DEVIS VARCHAR(50),
   DATE_DEVIS_ACCEPTER DATE,
   ID_DEMANDE INT(20) NOT NULL,
   PRIMARY KEY(ID_DEVIS),
   FOREIGN KEY(ID_DEMANDE) REFERENCES DEMANDE(ID_DEMANDE)
);

CREATE TABLE AGENT(
   ID_AGENT INT(20) NOT NULL AUTO_INCREMENT,
   MATRICULE_AGENT VARCHAR(50),
   NOM_AGENT VARCHAR(50),
   PRENOM_AGENT VARCHAR(50),
   ID_DEVIS INT(20) NOT NULL,
   PRIMARY KEY(ID_AGENT),
   UNIQUE(ID_DEVIS),
   FOREIGN KEY(ID_DEVIS) REFERENCES DEVIS(ID_DEVIS)
);

CREATE TABLE Travailler(
   ID_CONTRAT INT(20) NOT NULL AUTO_INCREMENT,
   ID_JOUR INT(20) NOT NULL,
   ID_ZEI INT(20) NOT NULL,
   PRIMARY KEY(ID_CONTRAT, ID_JOUR, ID_ZEI),
   FOREIGN KEY(ID_CONTRAT) REFERENCES CONTRAT(ID_CONTRAT),
   FOREIGN KEY(ID_JOUR) REFERENCES JOUR(ID_JOUR),
   FOREIGN KEY(ID_ZEI) REFERENCES ZEI(ID_ZEI)
);

CREATE TABLE Avoir(
   ID_OPERATION INT(20) NOT NULL AUTO_INCREMENT,
   ID_TYPE_OPERATION INT(20) NOT NULL,
   PRIMARY KEY(ID_OPERATION, ID_TYPE_OPERATION),
   FOREIGN KEY(ID_OPERATION) REFERENCES OPERATION(ID_OPERATION),
   FOREIGN KEY(ID_TYPE_OPERATION) REFERENCES TYPE_OPERATION(ID_TYPE_OPERATION)
);


